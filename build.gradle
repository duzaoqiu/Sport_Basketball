// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	apply from: "dependencyConfig.gradle"
    ext.kotlin_version = '1.3.41'
    repositories {
        google()
        jcenter()
        maven {
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url "https://maven.benchdev.cn/repository/com-app-android/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //上传仓库使用
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    apply plugin: 'com.bmuschko.nexus'
    repositories {
        google()
        jcenter()
        maven {
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url "https://maven.benchdev.cn/repository/com-app-android/"
        }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases" }
    }
}

/*task clean(type: Delete) {
    delete rootProject.buildDir
}*/

//allprojects {
//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked"
//            options.compilerArgs << "-Xlint:deprecation"
//        }
//    }
//}


gradle.afterProject { project ->
    if (project.pluginManager.hasPlugin('com.android.application')
            || project.pluginManager.hasPlugin('com.android.library')
            || project.pluginManager.hasPlugin('com.android.test')
            || project.pluginManager.hasPlugin('com.android.feature')) {
        if (true) {
            gradle.println("Override build ABIs for the project ${project.name}")
            project.android {
               /* splits {
                    abi {
                        enable true
                        universalApk false

//reset()
//include 'armeabi-v7a'
//include 'arm64-v8a'
//include 'x86'
//include 'x86_64'

                    }
                }*/
            }
        }

        if (true) {
            gradle.println("Override lintOptions for the project ${project.name}")
            project.android {
                lintOptions {
                    // checkReleaseBuilds false
                    abortOnError false
                }
            }
        }

        // (you still need to re-build OpenCV with debug information to debug it)
        if (true) {
            gradle.println("Override doNotStrip-debug for the project ${project.name}")
            project.android {
                buildTypes {
                    debug {
                        packagingOptions {
                            doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
                        }
                    }
                }
            }
        }
        if (false || project.hasProperty("doNotStrip")) {
            gradle.println("Override doNotStrip-release for the project ${project.name}")
            project.android {
                buildTypes {
                    release {
                        packagingOptions {
                            doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
                        }
                    }
                }
            }
        }

    }
}
